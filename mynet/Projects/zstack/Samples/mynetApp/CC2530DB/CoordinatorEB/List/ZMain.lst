###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         11/Apr/2021  11:31:04 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\ZMain\TI2530DB\ZMain.c                     #
#    Command line       =  -f C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Proje #
#                          cts\zstack\Samples\mynetApp\CC2530DB\..\..\..\Tool #
#                          s\CC2530DB\f8wCoord.cfg (-DCPU32MHZ                #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f     #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wConfig.cfg (-DSECURE=0                  #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\ZMain\TI2530DB\ZMain.c -D ZTOOL_P1 -D      #
#                          MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D           #
#                          LCD_SUPPORTED=DEBUG -lC C:\Users\25749\OneDrive\×À #
#                          Ãæ\Zigbee\mynet\Projects\zstack\Samples\mynetApp\C #
#                          C2530DB\CoordinatorEB\List\ -lA                    #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\CoordinatorEB\Li #
#                          st\ --diag_suppress Pe001,Pa010 -o                 #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\CoordinatorEB\Ob #
#                          j\ -e --debug --core=plain --dptr=16,1             #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Proje #
#                          cts\zstack\Samples\mynetApp\CC2530DB\ -I           #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\SOURCE\ -I    #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\ZMAIN\T #
#                          I2530DB\ -I C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\my #
#                          net\Projects\zstack\Samples\mynetApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\MT\ -I                       #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\HAL\INCLUDE\ -I                          #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\HAL\TARGET\CC2530EB\ -I                  #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\OSAL\MCU\CCSOC\ -I                       #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\OSAL\INCLUDE\ -I                         #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\STACK\AF\ -I C:\Users\25749\OneDrive\×ÀÃ #
#                          æ\Zigbee\mynet\Projects\zstack\Samples\mynetApp\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\ -I     #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\STACK\SEC\ -I C:\Users\25749\OneDrive\×À #
#                          Ãæ\Zigbee\mynet\Projects\zstack\Samples\mynetApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\ -I   #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\STACK\SYS\ -I C:\Users\25749\OneDrive\×À #
#                          Ãæ\Zigbee\mynet\Projects\zstack\Samples\mynetApp\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\ -I    #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\ZMAC\F8W\ -I C:\Users\25749\OneDrive\×ÀÃ #
#                          æ\Zigbee\mynet\Projects\zstack\Samples\mynetApp\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\ZMAC\ -I          #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\SERVICES\SADDR\ -I                       #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\SERVICES\SDATA\ -I                       #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MAC\INCLUDE\ -I                          #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MAC\HIGH_LEVEL\ -I                       #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MAC\LOW_LEVEL\srf04\ -I                  #
#                          C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz    #
#    List file          =  C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\CoordinatorEB\Li #
#                          st\ZMain.lst                                       #
#    Object file        =  C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects #
#                          \zstack\Samples\mynetApp\CC2530DB\CoordinatorEB\Ob #
#                          j\ZMain.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects\zstack\ZMain\TI2530DB\ZMain.c
      1          /**************************************************************************************************
      2            Filename:       ZMain.c
      3            Revised:        $Date: 2009-09-17 20:35:33 -0700 (Thu, 17 Sep 2009) $
      4            Revision:       $Revision: 20782 $
      5          
      6            Description:    Startup and shutdown code for ZStack
      7            Notes:          This version targets the Chipcon CC2530
      8          
      9          
     10            Copyright 2005-2009 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          
     45          #include "ZComDef.h"
     46          #include "OSAL.h"
     47          #include "OSAL_Nv.h"
     48          #include "OnBoard.h"

    for (i=0; i<504; i++) asm("NOP");          /* Require 63us delay for all revs */                \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",228  Error[Pe169]: 
          expected a declaration

    CLKCONCMD = (CLKCONCMD_32MHZ | OSC_32KHZ); /* Select 32MHz XOSC and the source for 32K clock */ \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",229  Error[Pe077]: 
          this declaration has no storage class or type specifier

    CLKCONCMD = (CLKCONCMD_32MHZ | OSC_32KHZ); /* Select 32MHz XOSC and the source for 32K clock */ \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",229  Error[Pe147]: 
          declaration is incompatible with
          "unsigned char volatile __sfr CLKCONCMD" (declared at line 200 of
          "C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0
          Evaluation\8051\inc\ioCC2530.h")

    CLKCONCMD = (CLKCONCMD_32MHZ | OSC_32KHZ); /* Select 32MHz XOSC and the source for 32K clock */ \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",229  Error[Be022]: 
          location address not allowed for initialized variables (writable
          variables without the __no_init attribute)

    while (CLKCONSTA != (CLKCONCMD_32MHZ | OSC_32KHZ)); /* Wait for the change to be effective */   \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",230  Error[Pe169]: 
          expected a declaration

    SLEEPCMD |= OSC_PD;                        /* turn off 16MHz RC */                              \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",231  Error[Pe077]: 
          this declaration has no storage class or type specifier

    SLEEPCMD |= OSC_PD;                        /* turn off 16MHz RC */                              \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",231  Error[Pe147]: 
          declaration is incompatible with
          "unsigned char volatile __sfr SLEEPCMD" (declared at line 190 of
          "C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0
          Evaluation\8051\inc\ioCC2530.h")

    SLEEPCMD |= OSC_PD;                        /* turn off 16MHz RC */                              \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",231  Error[Be022]: 
          location address not allowed for initialized variables (writable
          variables without the __no_init attribute)

    SLEEPCMD |= OSC_PD;                        /* turn off 16MHz RC */                              \
             ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",231  Error[Pe065]: 
          expected a ";"

    PREFETCH_ENABLE();                                             \//´ò¿ªÁËÒ»¸ö¼Ä´æÆ÷£¬»º´æÊ¹ÄÜ£¬¸úCPUµÄÈ¡Ö¸ÁîÓÐ¹Ø
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",234  Error[Pe169]: 
          expected a declaration

    PREFETCH_ENABLE();                                             \//´ò¿ªÁËÒ»¸ö¼Ä´æÆ÷£¬»º´æÊ¹ÄÜ£¬¸úCPUµÄÈ¡Ö¸ÁîÓÐ¹Ø
                                                                   ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",234  Error[Pe007]: 
          unrecognized token

    PREFETCH_ENABLE();                                             \//´ò¿ªÁËÒ»¸ö¼Ä´æÆ÷£¬»º´æÊ¹ÄÜ£¬¸úCPUµÄÈ¡Ö¸ÁîÓÐ¹Ø
                                                                   ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",234  Error[Pe169]: 
          expected a declaration

    LED1_DDR |= LED1_BV;                                           \//½«P1_0¡¢P1_1¡¢P1_4Èý¸ö¿ÚÅäÖÃÎªÊä³ö
                       ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",237  Warning[Pe012]: 
          parsing restarts here after previous syntax error

    LED1_DDR |= LED1_BV;                                           \//½«P1_0¡¢P1_1¡¢P1_4Èý¸ö¿ÚÅäÖÃÎªÊä³ö
                                                                   ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",237  Error[Pe007]: 
          unrecognized token

    LED1_DDR |= LED1_BV;                                           \//½«P1_0¡¢P1_1¡¢P1_4Èý¸ö¿ÚÅäÖÃÎªÊä³ö
                                                                   ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",237  Error[Pe169]: 
          expected a declaration

    LED3_DDR |= LED3_BV;                                           \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",239  Error[Pe077]: 
          this declaration has no storage class or type specifier

    LED3_DDR |= LED3_BV;                                           \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",239  Error[Pe147]: 
          declaration is incompatible with "unsigned char volatile __sfr P1DIR"
          (declared at line 268 of "C:\Program Files (x86)\IAR
          Systems\Embedded Workbench 6.0 Evaluation\8051\inc\ioCC2530.h")

    LED3_DDR |= LED3_BV;                                           \
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",239  Error[Be022]: 
          location address not allowed for initialized variables (writable
          variables without the __no_init attribute)

    LED3_DDR |= LED3_BV;                                           \
             ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",239  Error[Pe065]: 
          expected a ";"

    P0INP |= PUSH2_BV;                                             \//½«P0_0ÅäÖÃÎªÈýÌ¬
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",242  Error[Pe077]: 
          this declaration has no storage class or type specifier

    P0INP |= PUSH2_BV;                                             \//½«P0_0ÅäÖÃÎªÈýÌ¬
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",242  Error[Pe147]: 
          declaration is incompatible with "unsigned char volatile __sfr P0INP"
          (declared at line 131 of "C:\Program Files (x86)\IAR
          Systems\Embedded Workbench 6.0 Evaluation\8051\inc\ioCC2530.h")

    P0INP |= PUSH2_BV;                                             \//½«P0_0ÅäÖÃÎªÈýÌ¬
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",242  Error[Be022]: 
          location address not allowed for initialized variables (writable
          variables without the __no_init attribute)

    P0INP |= PUSH2_BV;                                             \//½«P0_0ÅäÖÃÎªÈýÌ¬
          ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",242  Error[Pe065]: 
          expected a ";"

    P0INP |= PUSH2_BV;                                             \//½«P0_0ÅäÖÃÎªÈýÌ¬
                                                                   ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",242  Error[Pe007]: 
          unrecognized token

    P0INP |= PUSH2_BV;                                             \//½«P0_0ÅäÖÃÎªÈýÌ¬
                                                                   ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\TARGET\CC2530EB\hal_board_cfg.h",242  Error[Pe169]: 
          expected a declaration

  typedef void (*halUARTCBack_t) (uint8 port, uint8 event);
                                                          ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\INCLUDE\hal_uart.h",119  Warning[Pe012]: 
          parsing restarts here after previous syntax error

    halUARTCBack_t      callBackFunc;
    ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\COMPONENTS\HAL\INCLUDE\hal_uart.h",141  Error[Pe020]: 
          identifier "halUARTCBack_t" is undefined
     49          #include "ZMAC.h"
     50          
     51          #ifndef NONWK
     52            #include "AF.h"
     53          #endif
     54          
     55          /* Hal */
     56          #include "hal_lcd.h"
     57          #include "hal_led.h"
     58          #include "hal_adc.h"
     59          #include "hal_drivers.h"
     60          #include "hal_assert.h"
     61          #include "hal_flash.h"
     62          #include"zhanglab.h"
     63          
     64          /*********************************************************************
     65           * MACROS
     66           */
     67          
     68          /*********************************************************************
     69           * CONSTANTS
     70           */
     71          
     72          // Maximun number of Vdd samples checked before go on
     73          #define MAX_VDD_SAMPLES  3
     74          #define ZMAIN_VDD_LIMIT  HAL_ADC_VDD_LIMIT_4
     75          
     76          /*********************************************************************
     77           * TYPEDEFS
     78           */
     79          
     80          /*********************************************************************
     81           * GLOBAL VARIABLES
     82           */
     83          
     84          /*********************************************************************
     85           * EXTERNAL VARIABLES
     86           */
     87          
     88          /*********************************************************************
     89           * EXTERNAL FUNCTIONS
     90           */
     91          
     92          extern bool HalAdcCheckVdd (uint8 limit);
     93          
     94          /*********************************************************************
     95           * LOCAL VARIABLES
     96           */
     97          
     98          /*********************************************************************
     99           * LOCAL FUNCTIONS
    100           */
    101          
    102          static void zmain_dev_info( void );
    103          static void zmain_ext_addr( void );
    104          static void zmain_vdd_check( void );
    105          
    106          #ifdef LCD_SUPPORTED
    107          static void zmain_lcd_init( void );
    108          #endif
    109          
    110          
    111          /*********************************************************************
    112           * @fn      main
    113           * @brief   First function called after startup.
    114           * @return  don't care
    115           */
    116          int main( void )
    117          {
    118            // Turn off interrupts
    119            osal_int_disable( INTS_ALL );//¾ÍÊÇEA=0
    120           
    121            // Initialization for board related stuff such as LEDs
    122            HAL_BOARD_INIT();//Íê³ÉÁË°å×ÓµÄÊ±ÖÓÇÐ»»¡¢ÉÁ´æ£¬Èý¸öµÆµÄÊä³ö£¬Ò»¸öio¿ÚÅäÖÃÎªÊäÈëÈýÌ¬
                   ^
Warning[Pe177]: variable "i" was declared but never referenced
    123          
    124            // Make sure supply voltage is high enough to run
    125            zmain_vdd_check();//Í¨¹ýADC¼ì²éµçÑ¹×´Ì¬
    126          
    127            // Initialize board I/O
    128            InitBoard( OB_COLD );//¹ØIO¿ÚµÈ£¬µ¥Æ¬»úÐÐÎª
    129          
    130            // Initialze HAL drivers
    131            HalDriverInit();//ÉèÖÃÍâÉè
    132          
    133            // Initialize NV System
    134            osal_nv_init( NULL );//ÉèÖÃflash
    135          
    136            // Initialize the MAC
    137            ZMacInit();//¹ØÓÚÐ­µ÷Æ÷¡¢Â·ÓÉÆ÷¡¢ÖÕ¶ËµÄÑ¡Ôñ
    138          
    139            // Determine the extended address
    140            zmain_ext_addr();//£¿£¿£¿£¿£¿
    141          
    142            // Initialize basic NV items
    143            zgInit();//£¿£¿£¿£¿£¿
    144          
    145          #ifndef NONWK
    146            // Since the AF isn't a task, call it's initialization routine
    147            afInit();
    148          #endif
    149          
    150            // Initialize the operating system
    151            osal_init_system();
    152          
    153            // Allow interrupts
    154            osal_int_enable( INTS_ALL );
    155          
    156            // Final board initialization
    157            InitBoard( OB_READY );
    158          
    159            // Display information about this device
    160            zmain_dev_info();
    161          
    162            /* Display the device info on the LCD */
    163          #ifdef LCD_SUPPORTED
    164            zmain_lcd_init();
    165          #endif
    166          
    167          #ifdef WDT_IN_PM1
    168            /* If WDT is used, this is a good place to enable it. */
    169            WatchDogEnable( WDTIMX );
    170          #endif
    171          
    172            osal_start_system(); // No Return from here
    173                      
    174            return 0;  // Shouldn't get here.
    175          } // main()
    176          
    177          /*********************************************************************
    178           * @fn      zmain_vdd_check
    179           * @brief   Check if the Vdd is OK to run the processor.
    180           * @return  Return if Vdd is ok; otherwise, flash LED, then reset
    181           *********************************************************************/
    182          static void zmain_vdd_check( void )
    183          {
                 ^
Error[Pe065]: expected a ";"
    184            uint8 vdd_passed_count = 0;
    185            bool toggle = 0;
    186          
    187            // Repeat getting the sample until number of failures or successes hits MAX
    188            // then based on the count value, determine if the device is ready or not
    189            while ( vdd_passed_count < MAX_VDD_SAMPLES )
    190            {
    191              if ( HalAdcCheckVdd (ZMAIN_VDD_LIMIT) )
    192              {
    193                vdd_passed_count++;    // Keep track # times Vdd passes in a row
    194                MicroWait (10000);     // Wait 10ms to try again
    195              }
    196              else
    197              {
    198                vdd_passed_count = 0;  // Reset passed counter
    199                MicroWait (50000);     // Wait 50ms
    200                MicroWait (50000);     // Wait another 50ms to try again
    201              }
    202          
    203              /* toggle LED1 and LED2 */
    204              if (vdd_passed_count == 0)
    205              {
    206                if ((toggle = !(toggle)))
    207                  HAL_TOGGLE_LED1();
    208                else
    209                  HAL_TOGGLE_LED2();
    210              }
    211            }
                   ^
Warning[Pe012]: parsing restarts here after previous syntax error
    212          
    213            /* turn off LED1 */
    214            HAL_TURN_OFF_LED1();
                   ^
Error[Pe169]: expected a declaration
    215            HAL_TURN_OFF_LED2();
                   ^
Error[Pe169]: expected a declaration
    216          }
                 ^
Error[Pe169]: expected a declaration
    217          
    218          /**************************************************************************************************
    219           * @fn          zmain_ext_addr
    220           *
    221           * @brief       Execute a prioritized search for a valid extended address and write the results
    222           *              into the OSAL NV system for use by the system. Temporary address not saved to NV.
    223           *
    224           * input parameters
    225           *
    226           * None.
    227           *
    228           * output parameters
    229           *
    230           * None.
    231           *
    232           * @return      None.
    233           **************************************************************************************************
    234           */
    235          static void zmain_ext_addr(void)
    236          {
    237            uint8 nullAddr[Z_EXTADDR_LEN] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
    238            uint8 writeNV = TRUE;
    239          
    240            // First check whether a non-erased extended address exists in the OSAL NV.
    241            if ((SUCCESS != osal_nv_item_init(ZCD_NV_EXTADDR, Z_EXTADDR_LEN, NULL))  ||
    242                (SUCCESS != osal_nv_read(ZCD_NV_EXTADDR, 0, Z_EXTADDR_LEN, aExtendedAddress)) ||
    243                (osal_memcmp(aExtendedAddress, nullAddr, Z_EXTADDR_LEN)))
    244            {
    245              // Attempt to read the extended address from the location on the lock bits page
    246              // where the programming tools know to reserve it.
    247              HalFlashRead(HAL_FLASH_IEEE_PAGE, HAL_FLASH_IEEE_OSET, aExtendedAddress, Z_EXTADDR_LEN);
    248          
    249              if (osal_memcmp(aExtendedAddress, nullAddr, Z_EXTADDR_LEN))
    250              {
    251                // Attempt to read the extended address from the designated location in the Info Page.
    252                if (!osal_memcmp((uint8 *)(P_INFOPAGE+HAL_INFOP_IEEE_OSET), nullAddr, Z_EXTADDR_LEN))
    253                {
    254                  osal_memcpy(aExtendedAddress, (uint8 *)(P_INFOPAGE+HAL_INFOP_IEEE_OSET), Z_EXTADDR_LEN);
    255                }
    256                else  // No valid extended address was found.
    257                {
    258                  uint8 idx;
                                  ^
Warning[Pe012]: parsing restarts here after previous syntax error
    259                  
    260          #if !defined ( NV_RESTORE )
    261                  writeNV = FALSE;  // Make this a temporary IEEE address
                         ^
Error[Pe077]: this declaration has no storage class or type specifier
    262          #endif
    263          
    264                  /* Attempt to create a sufficiently random extended address for expediency.
    265                   * Note: this is only valid/legal in a test environment and
    266                   *       must never be used for a commercial product.
    267                   */
    268                  for (idx = 0; idx < (Z_EXTADDR_LEN - 2);)
                         ^
Error[Pe169]: expected a declaration
    269                  {
    270                    uint16 randy = osal_rand();
    271                    aExtendedAddress[idx++] = LO_UINT16(randy);
    272                    aExtendedAddress[idx++] = HI_UINT16(randy);
    273                  }
    274                  // Next-to-MSB identifies ZigBee devicetype.
    275          #if ZG_BUILD_COORDINATOR_TYPE && !ZG_BUILD_JOINING_TYPE
    276                  aExtendedAddress[idx++] = 0x10;
                                                       ^
Warning[Pe012]: parsing restarts here after previous syntax error
    277          #elif ZG_BUILD_RTRONLY_TYPE
    278                  aExtendedAddress[idx++] = 0x20;
    279          #else
    280                  aExtendedAddress[idx++] = 0x30;
    281          #endif
    282                  // MSB has historical signficance.
    283                  aExtendedAddress[idx] = 0xF8;
                                          ^
Error[Pe020]: identifier "idx" is undefined
    284                }
                       ^
Error[Pe169]: expected a declaration
    285              }
    286          
    287              if (writeNV)
    288              {
    289                (void)osal_nv_write(ZCD_NV_EXTADDR, 0, Z_EXTADDR_LEN, aExtendedAddress);
    290              }
    291            }
    292          
    293            // Set the MAC PIB extended address according to results from above.
    294            (void)ZMacSetReq(MAC_EXTENDED_ADDRESS, aExtendedAddress);
                                                                           ^
Warning[Pe012]: parsing restarts here after previous syntax error
    295          }
                 ^
Error[Pe169]: expected a declaration
    296          
    297          /**************************************************************************************************
    298           * @fn          zmain_dev_info
    299           *
    300           * @brief       This displays the IEEE (MSB to LSB) on the LCD.
    301           *
    302           * input parameters
    303           *
    304           * None.
    305           *
    306           * output parameters
    307           *
    308           * None.
    309           *
    310           * @return      None.
    311           **************************************************************************************************
    312           */
    313          static void zmain_dev_info(void)
    314          {
    315          #ifdef LCD_SUPPORTED
    316            uint8 i;
    317            uint8 *xad;
    318            uint8 lcd_buf[Z_EXTADDR_LEN*2+1];
    319          
    320            // Display the extended address.
    321            xad = aExtendedAddress + Z_EXTADDR_LEN - 1;
    322          
    323            for (i = 0; i < Z_EXTADDR_LEN*2; xad--)
    324            {
    325              uint8 ch;
    326              ch = (*xad >> 4) & 0x0F;
    327              lcd_buf[i++] = ch + (( ch < 10 ) ? '0' : '7');
    328              ch = *xad & 0x0F;
    329              lcd_buf[i++] = ch + (( ch < 10 ) ? '0' : '7');
    330            }
    331            lcd_buf[Z_EXTADDR_LEN*2] = '\0';
    332            HalLcdWriteString( "IEEE: ", HAL_LCD_LINE_1 );
    333            HalLcdWriteString( (char*)lcd_buf, HAL_LCD_LINE_2 );
    334          #endif
    335          }
    336          
    337          #ifdef LCD_SUPPORTED
    338          /*********************************************************************
    339           * @fn      zmain_lcd_init
    340           * @brief   Initialize LCD at start up.
    341           * @return  none
    342           *********************************************************************/
    343          static void zmain_lcd_init ( void )
    344          {
    345          #ifdef SERIAL_DEBUG_SUPPORTED
    346            {
    347              HalLcdWriteString( "TexasInstruments", HAL_LCD_LINE_1 );
    348          
    349          #if defined( MT_MAC_FUNC )
    350          #if defined( ZDO_COORDINATOR )
    351                HalLcdWriteString( "MAC-MT Coord", HAL_LCD_LINE_2 );
    352          #else
    353                HalLcdWriteString( "MAC-MT Device", HAL_LCD_LINE_2 );
    354          #endif // ZDO
    355          #elif defined( MT_NWK_FUNC )
    356          #if defined( ZDO_COORDINATOR )
    357                HalLcdWriteString( "NWK Coordinator", HAL_LCD_LINE_2 );
    358          #else
    359                HalLcdWriteString( "NWK Device", HAL_LCD_LINE_2 );
    360          #endif // ZDO
    361          #endif // MT_FUNC
    362            }
    363          #endif // SERIAL_DEBUG_SUPPORTED
    364          }
    365          #endif
    366          
    367          /*********************************************************************
    368          *********************************************************************/
Warning[Pe012]: parsing restarts here after previous syntax error

  static void zmain_dev_info( void );
              ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects\zstack\ZMain\TI2530DB\ZMain.c",102  Error[Pe114]: 
          function "zmain_dev_info" was referenced but not defined

  static void zmain_ext_addr( void );
              ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects\zstack\ZMain\TI2530DB\ZMain.c",103  Error[Pe114]: 
          function "zmain_ext_addr" was referenced but not defined

  static void zmain_vdd_check( void );
              ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects\zstack\ZMain\TI2530DB\ZMain.c",104  Error[Pe114]: 
          function "zmain_vdd_check" was referenced but not defined

  static void zmain_lcd_init( void );
              ^
"C:\Users\25749\OneDrive\×ÀÃæ\Zigbee\mynet\Projects\zstack\ZMain\TI2530DB\ZMain.c",107  Error[Pe114]: 
          function "zmain_lcd_init" was referenced but not defined

Errors: 38
Warnings: 8
